"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

from io import BytesIO
import struct

class motion_control_command_lcmt(object):
    __slots__ = ["mode", "gait_id", "x_vel_des", "y_vel_des", "yaw_vel_des", "rpy_des", "body_height", "step_height", "order"]

    __typenames__ = ["int32_t", "int32_t", "float", "float", "float", "float", "float", "float", "int32_t"]

    __dimensions__ = [None, None, None, None, None, [3], None, None, None]

    def __init__(self):
        self.mode = 0
        self.gait_id = 0
        self.x_vel_des = 0.0
        self.y_vel_des = 0.0
        self.yaw_vel_des = 0.0
        self.rpy_des = [ 0.0 for dim0 in range(3) ]
        self.body_height = 0.0
        self.step_height = 0.0
        self.order = 0

    def encode(self):
        buf = BytesIO()
        buf.write(motion_control_command_lcmt._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">iifff", self.mode, self.gait_id, self.x_vel_des, self.y_vel_des, self.yaw_vel_des))
        buf.write(struct.pack('>3f', *self.rpy_des[:3]))
        buf.write(struct.pack(">ffi", self.body_height, self.step_height, self.order))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != motion_control_command_lcmt._get_packed_fingerprint():
            raise ValueError("Decode error")
        return motion_control_command_lcmt._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = motion_control_command_lcmt()
        self.mode, self.gait_id, self.x_vel_des, self.y_vel_des, self.yaw_vel_des = struct.unpack(">iifff", buf.read(20))
        self.rpy_des = struct.unpack('>3f', buf.read(12))
        self.body_height, self.step_height, self.order = struct.unpack(">ffi", buf.read(12))
        return self
    _decode_one = staticmethod(_decode_one)

    def _get_hash_recursive(parents):
        if motion_control_command_lcmt in parents: return 0
        tmphash = (0xbd18999dbfbc5ce5) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if motion_control_command_lcmt._packed_fingerprint is None:
            motion_control_command_lcmt._packed_fingerprint = struct.pack(">Q", motion_control_command_lcmt._get_hash_recursive([]))
        return motion_control_command_lcmt._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", motion_control_command_lcmt._get_packed_fingerprint())[0]

